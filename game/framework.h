// header.h: 표준 시스템 포함 파일
// 또는 프로젝트 특정 포함 파일이 들어 있는 포함 파일입니다.
//

#pragma once

#include "targetver.h"
#define WIN32_LEAN_AND_MEAN             // 거의 사용되지 않는 내용을 Windows 헤더에서 제외합니다.
// Windows 헤더 파일
#include <windows.h>
// C 런타임 헤더 파일입니다.
#include <stdlib.h>
#include <malloc.h>
#include <memory.h>
#include <tchar.h>


//#include <iostream>

//정적 라이브러리
//장점: 시스템 환경이 변해도 어플리케이션에 아무런 영향이 없다. 컴파일시 필요한 라이브러리를 적재하기 때문에 이식성이 좋다. 런타임시 외부로 참조 필요 x 속도가 빠름
//단점: 같은 코드를 가진 프로그램이 실행할 경우가 있다면 중복되고 메모리가 낭비됨 라이브러리가 변경되면 변경된 라이브러리 뿐만 아니라 다시 컴파일을 재배포해야함
//동적 라이브럴리
//장점: 메모리절약, 보다 쉽고 업그레이드해서 재배포 가능, 서로 다른 프로그램에서 동일한 함수를 호출가능 유지보수가 쉽다
//단점: 외부의존도가 높기때문에 이식성이 낮다. 공유라이브러리를 메모리 올려놓고 해당 라이브러리를 찾아서 접근해야함(속도가 느림)